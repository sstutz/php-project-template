<?xml version="1.0"?>
<ruleset name="my-coding-standard"
         xmlns="http://pmd.sf.net/ruleset/1.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd"
         xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd">
    <description>Default Coding Standard</description>

    <!--
    Complexity is determined by the number of decision points in a method plus one for the method entry.
    The decision points are 'if', 'while', 'for', and 'case labels'. Generally,
    1-4 is low complexity,
    5-7 indicates moderate complexity,
    8-10 is high complexity, and
    11+ is very high complexity.
    -->
    <rule ref="rulesets/codesize.xml/CyclomaticComplexity" />

    <!-- The rules enforce a clean code base. This includes rules from SOLID and object calisthenics. -->
    <rule ref="rulesets/cleancode.xml" />

    <!-- Import the entire unused code rule set -->
    <rule ref="rulesets/unusedcode.xml" />

    <!-- Accessing a super-global variable directly is considered a bad practice. -->
    <rule ref="rulesets/controversial.xml/Superglobals" />

    <!-- A collection of rules that find software design related problems. -->
    <rule ref="rulesets/design.xml"/>

    <!-- 'getX(): boolean' is considered a bad practice. The convention is to name these methods 'isX()' or 'hasX()'.-->
    <rule ref="rulesets/naming.xml/BooleanGetMethodName" />
</ruleset>

