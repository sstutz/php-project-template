<?php

$rules = [
    '@PSR2' => true,
    'psr4' => true,
    'array_syntax' => ['syntax' => 'short'],
    'blank_line_before_statement' => ['statements' => ['return']],
    'blank_line_after_opening_tag' => true,
    'cast_spaces' => ['space' => 'none'],
    'concat_space' => ['spacing' => 'one'],
    'declare_equal_normalize' => ['space' => 'single'],
    'function_typehint_space' => true,
    'include' => true,
    'lowercase_cast' => true,
    'class_attributes_separation' => true,
    'no_blank_lines_after_class_opening' => true,
    'no_blank_lines_after_phpdoc' => true,
    'no_empty_comment' => true,
    'no_empty_phpdoc' => true,
    'no_empty_statement' => true,
    'no_extra_blank_lines' => true,
    'no_leading_import_slash' => true,
    'no_leading_namespace_whitespace' => true,
    'no_mixed_echo_print' => ['use' => 'echo'],
    'no_multiline_whitespace_around_double_arrow' => true,
    'multiline_whitespace_before_semicolons' => ['strategy' => 'no_multi_line'],
    'no_php4_constructor' => true,
    'no_short_bool_cast' => true,
    'no_spaces_around_offset' => true,
    'no_trailing_comma_in_list_call' => true,
    'no_trailing_comma_in_singleline_array' => true,
    'no_unneeded_control_parentheses' => true,
    'no_unused_imports' => true,
    'no_useless_else' => true,
    'no_useless_return' => true,
    'no_whitespace_before_comma_in_array' => true,
    'no_whitespace_in_blank_line' => true,
    'normalize_index_brace' => true,
    'object_operator_without_whitespace' => true,
    'ordered_class_elements' => [
        'order' => [
            'use_trait',
            'constant',
            'property',
            'construct',
            'destruct',
            'method',
            'magic',
        ]
    ],
    'ordered_imports' => ['sortAlgorithm' => 'alpha'],
    'self_accessor' => true,
    'semicolon_after_instruction' => true,
    'short_scalar_cast' => true,
    'ternary_operator_spaces' => true,
    'trailing_comma_in_multiline_array' => true,
    'trim_array_spaces' => true,
    'unary_operator_spaces' => true,
    'whitespace_after_comma_in_array' => true,
    'native_function_casing' => true,
    'compact_nullable_typehint' => true,
    'return_type_declaration' => ['space_before' => 'none'],

    // Risky stuff
    'modernize_types_casting' => true,
    'function_to_constant' => true,
    'is_null' => true,
    'no_alias_functions' => true,
    'random_api_migration' => true,
];

return PhpCsFixer\Config::create()
    ->setRiskyAllowed(true)
    ->setRules($rules)
    ->setFinder(PhpCsFixer\Finder::create()
        ->in(__dir__ . '/src')
        ->in(__dir__ . '/tests')
        ->in(__dir__ . '/composer')
        ->name('*.php')
    );

