<?xml version="1.0"?>
<ruleset>
    <file>./src</file>
    <file>./tests</file>
    <file>./composer</file>

    <!-- The PSR-2 coding standard -->
    <rule ref="PSR2" />

    <!-- Ensures that array are indented one tab stop -->
    <rule ref="Generic.Arrays.ArrayIndent" />

    <!-- Detects unnecessary overridden methods that simply call their parent -->
    <rule ref="Generic.CodeAnalysis.UselessOverridingMethod" />

    <!-- Detecting BOMs that may corrupt application work -->
    <rule ref="Generic.Files.ByteOrderMark" />

    <!-- PHP files should only contain code -->
    <rule ref="Generic.Files.InlineHTML" />

    <!-- Checks that only one class is declared per file -->
    <rule ref="Generic.Files.OneClassPerFile" />

    <!-- Checks that only one interface is declared per file -->
    <rule ref="Generic.Files.OneInterfacePerFile" />

    <!-- Checks that calls to methods and functions are spaced correctly -->
    <rule ref="Generic.Functions.FunctionCallArgumentSpacing" />

    <!-- Discourages the use of deprecated functions that are kept in PHP for compatibility with older versions -->
    <rule ref="Generic.PHP.DeprecatedFunctions" />

    <!-- Makes sure that shorthand PHP open tags are not used -->
    <rule ref="Generic.PHP.DisallowShortOpenTag" />

    <!-- Discourages the use of alias functions that are kept in PHP for compatibility with older versions -->
    <rule ref="Generic.PHP.ForbiddenFunctions" />

    <!-- Ensure that parameters defined for a function that have a default value come at the end of the function signature -->
    <rule ref="PEAR.Functions.ValidDefaultValue" />

    <!-- Ensures all class keywords are lowercase -->
    <rule ref="Squiz.Classes.LowercaseClassKeywords" />

    <!-- Tests that the stars in a doc comment align correctly -->
    <rule ref="Squiz.Commenting.DocCommentAlignment" />

    <!-- Warn about commented out code -->
    <rule ref="Squiz.PHP.CommentedOutCode"/>

    <!-- The size calculation of arrays in loop signatures is discouraged -->
    <rule ref="Squiz.PHP.DisallowSizeFunctionsInLoops" />

    <!-- The use of eval() is discouraged -->
    <rule ref="Squiz.PHP.Eval" />

    <!-- Discourages the use of alias functions that are kept in PHP for compatibility with older versions -->
    <rule ref="Squiz.PHP.ForbiddenFunctions" />

    <!-- Stops the usage of the "global" keyword -->
    <rule ref="Squiz.PHP.GlobalKeyword" />

    <!-- Ensures all calls to inbuilt PHP functions are lowercase -->
    <rule ref="Squiz.PHP.LowercasePHPFunctions" />

    <!-- Warns about code that can never been executed -->
    <rule ref="Squiz.PHP.NonExecutableCode" />

    <!-- Verifies that class members have scope modifiers -->
    <rule ref="Squiz.Scope.MethodScope" />

    <!-- Checks for usage of "$this" in static methods, which will cause runtime errors -->
    <rule ref="Squiz.Scope.StaticThisUsage" />

    <!-- Makes sure that any use of double quotes strings are warranted -->
    <rule ref="Squiz.Strings.DoubleQuoteUsage">
        <exclude name="Squiz.Strings.DoubleQuoteUsage.ContainsVar" />
    </rule>

    <!-- Ensure cast statements don't contain whitespace -->
    <rule ref="Squiz.WhiteSpace.CastSpacing" />

    <!-- Ensures all language constructs (without brackets) contain a single space between themselves and their content -->
    <rule ref="Squiz.WhiteSpace.LanguageConstructSpacing" />
</ruleset>

